name: Backend CI/CD 

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}  

jobs:
  docker:
    name: Docker Build & Push to GHCR
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.get-tag.outputs.image-tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image (latest + commit-sha)
        id: build-push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

      - name: Export image tag for downstream jobs
        id: get-tag
        run: |
          echo "image-tag=${{ github.sha }}" >> $GITHUB_OUTPUT
        shell: bash

  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    needs: docker
    outputs:
      deploy_status: ${{ steps.deploy-container.outputs.status }}
    steps:
      - name: Deploy via SSH to EC2
        id: deploy-container
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.EC2_PUBLIC_IP }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          timeout: 120s
          script: |
            set -e
            IMAGE=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
            TAG=${{ needs.docker.outputs.image_tag }}
            echo "Pulling image $IMAGE:$TAG and latest"
            docker login ghcr.io -u ${{ github.actor }} -p "${{ secrets.GITHUB_TOKEN }}"
            docker pull $IMAGE:$TAG
            docker pull $IMAGE:latest || true
            echo "Stopping existing container if any"
            docker stop backend || true
            docker rm backend || true
            echo "Starting container with tag $TAG"
            docker run -d --name backend -p 8080:8080 $IMAGE:$TAG

  rollback:
    name: Rollback
    runs-on: ubuntu-latest
    needs: deploy
    if: ${{ needs.deploy.result == 'failure' }}
    steps:
      - name: Rollback via SSH
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.EC2_PUBLIC_IP }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          timeout: 120s
          script: |
            set -e
            IMAGE=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
            PREV_TAG=latest
            echo "Deployment failed, rolling back to $IMAGE:$PREV_TAG"
            docker login ghcr.io -u ${{ github.actor }} -p "${{ secrets.GITHUB_TOKEN }}"
            docker pull $IMAGE:$PREV_TAG
            docker stop backend || true
            docker rm backend || true
            docker run -d --name backend -p 8080:8080 $IMAGE:$PREV_TAG
